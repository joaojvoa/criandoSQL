--USUARIO
CREATE TABLE Usuario (
	id INT IDENTITY PRIMARY KEY,
	logar VARCHAR(50),
	senha VARCHAR(50)
)

--COORDENADOR
CREATE TABLE Coordenador (
	id INT IDENTITY PRIMARY KEY,
	CONSTRAINT FK_ID_USUARIO FOREIGN KEY (id) REFERENCES Usuario(id),
	nome VARCHAR(100),
	email VARCHAR(50),
	UNIQUE(email),
	celular varchar(50),
	UNIQUE(celular)
)


--ALUNO
CREATE TABLE Aluno (
	id INT IDENTITY PRIMARY KEY,
	CONSTRAINT FK_USUARIO_ID FOREIGN KEY (id) REFERENCES Usuario(id),
	nome VARCHAR(100),
	email varchar(50),
	UNIQUE(email),
	ra VARCHAR(20),
	Foto VARCHAR(50)
)

--PROFESSOR
CREATE TABLE Professor (
	id INT IDENTITY PRIMARY KEY,
	CONSTRAINT FK_ID_USUARIO FOREIGN KEY (id) REFERENCES Usuario(id),
	email VARCHAR(50),
	UNIQUE(email),
	apelido VARCHAR(50)
)

--DISCIPLINA
CREATE TABLE Disciplina (
	id INT IDENTITY PRIMARY KEY,
	nome VARCHAR(100),
	UNIQUE(nome),
	data_disciplina DATETIME,
	CONSTRAINT DF_DATA_DISCIPLINA DEFAULT (GETDATE()) FOR data_disciplina,
	status_disciplina VARCHAR(6),
	CHECK( status_disciplina IN ('ABERTA','FECHADA') ),
	planodeensino varchar(50),
	cargahoraria varchar(2),
	CHECK(cargahoraria  IN ('40','80')),
	competencias VARCHAR(50),
	habilidades VARCHAR(50),
	ementa VARCHAR(50),
	conteudoprogramatico VARCHAR(50),
	bibliografiAbasica VARCHAR(50),
	bibliografiAcomplementar VARCHAR(50),
	percentualPratico varchar(3),
	CHECK (percentualPratico in ('00','100')),
	percentualTeorico varchar(3),
	CHECK (percentualTeorico in ('00','100')),
	CONSTRAINT FK_COORDENADOR FOREIGN KEY (id) REFERENCES Coordenador(id)

)

--CURSO
CREATE TABLE Curso (
	id INT IDENTITY PRIMARY KEY,
	nome varchar(50),
	UNIQUE (nome)
)

--DISCIPLINA OFERTADA

CREATE TABLE Disciplina_Oferta (
	
	id INT IDENTITY PRIMARY KEY,
	CONSTRAINT FK_COORDENADOR FOREIGN KEY (id) REFERENCES Coordenador(id),
	DtInicioMatricula2 VARCHAR(50),
	DtFimMatricula2   VARCHAR(50),
	CONSTRAINT FK_DISCIPLINA FOREIGN KEY (id) REFERENCES Disciplina(id),
	CONSTRAINT FK_CURSO		 FOREIGN KEY (id)		 REFERENCES Curso(id),
	ANO INT,
	CHECK (ANO >= 1900 and ANO <= 2100),
	SEMESTRE INT
	CHECK (SEMESTRE >= 1 and SEMESTRE <= 2),
	TURMA VARCHAR (50),
	CHECK ( TURMA = '^[A-Z]{3}-\d{4}$'),
	CONSTRAINT FK_id_PROFESSOR FOREIGN KEY (id) REFERENCES Professor(id),
	METODOLOGIA			VARCHAR(100),
	RECURSOS			VARCHAR(50),
	CRITERIO_AVALIACAO	VARCHAR(50),
	PLANO_DE_AULAS		VARCHAR(100)

)

--ATIVIDADE
CREATE TABLE Atividade(
	id INT IDENTITY PRIMARY KEY,
	titulo  VARCHAR(50),
	UNIQUE (titulo),
	descricao VARCHAR(50),
	conteudo VARCHAR(50),
	TIPO VARCHAR(50),
	CHECK (TIPO  IN ('RESPOSTA ABERTA','TESTE')),
	EXTRAS VARCHAR(50),
	CONSTRAINT FK_ID_PROFESSOR FOREIGN KEY (id) REFERENCES Professor(id)
)

--SOLICITACAOMATRICULA

CREATE TABLE SolicitacaoMatricula(	
	id INT IDENTITY PRIMARY KEY,
	CONSTRAINT FK_ID_ALUNO FOREIGN KEY (id) REFERENCES Aluno(id),
	CONSTRAINT FK_DISCIPLINA_OFERTADA FOREIGN KEY (id) REFERENCES Disciplina_Oferta(id),
	DtSolicitacao  DATETIME,
	CONSTRAINT DF_DATA_DtSolicitacao DEFAULT (GETDATE()) FOR DtSolicitacao,
	solicita_status varchar(10),
	CHECK (solicita_status IN ('Solicitada','Aprovada','Rejeitada','Cancelada')),
)

--ATIVIDADEVINCULADA
CREATE TABLE AtividadeVinculada (
	id INT IDENTITY PRIMARY KEY,
	CONSTRAINT FK_ATIVIDADE FOREIGN KEY (id) REFERENCES Atividade(id),
	CONSTRAINT FK_PROFESSOR FOREIGN KEY (id) REFERENCES Professor(id),
	CONSTRAINT FK_DISCIPLINA_OFERTA FOREIGN KEY (id) REFERENCES Disciplina_Oferta(id),
	rotulo VARCHAR(3),
	CHECK (rotulo IN ('AC1','AC2')),
	Status_atividade VARCHAR(50),
	CHECK (Status_atividade IN ('‘Disponibilizada’','‘Aberta’','‘Fechada’', '‘Encerrada’', '‘Prorrogada’')),
	DtInicioRespostas DATETIME,
	DtFimRespostas DATETIME,
)

--ENTREGA
CREATE TABLE Entrega (

	id INT IDENTITY PRIMARY KEY,
	CONSTRAINT FK_ID_ALUNO FOREIGN KEY (id) REFERENCES Aluno(id),
	CONSTRAINT FK_ID_ATIVIDADE_VINCULADA FOREIGN KEY (id) REFERENCES AtividadeVinculada(id),
	titulo VARCHAR(50),
	resposta VARCHAR(50),
	DtEntrega DATETIME,
	StatusEntrege VARCHAR(50),
	CHECK (StatusEntrege IN ('ENTREGUE', 'CORRIGIDO')),
	CONSTRAINT DF_StatusEntrege DEFAULT ('ENTREGUE') FOR StatusEntregue,
	CONSTRAINT FK_ID_PROFESSOR FOREIGN KEY (id) REFERENCES Professor(id),
	nota VARCHAR(50),
	CHECK (nota in ('0.00'-'10.00')),
	DtAvalicao DATETIME,
	Obs VARCHAR(50)	
)

--MENSAGEM
CREATE TABLE Mensagem (

	id INT IDENTITY PRIMARY KEY,
	CONSTRAINT FK_ID_ALUNO FOREIGN KEY (id) REFERENCES Aluno(id),
	CONSTRAINT FK_ID_PROFESSOR FOREIGN KEY (id) REFERENCES Professor(id),
	assunto VARCHAR(50),
	Referencia VARCHAR(50),
	Conteudo VARCHAR(50),
	Status_Mensagem VARCHAR(50),
	CHECK (Status_Mensagem IN ('ENVIADO', 'LIDO', 'RESPONDIDO')),
	DtEnvio DATETIME,
	DtResposta DATETIME,
	Resposta VARCHAR(50),
)


-- ALTER TABLE

-- SE A NOTA FOR 0.00 OU 10.00 FORMATARAR PARA DECIMAL

ALTER TABLE Entrega 
	ALTER COLUMN nota decimal (2,2) NOT NULL;


-- ALTERAR A RESPOSTA TIPO  BOOLEAN

ALTER TABLE Mensagem
	ALTER COLUMN Resposta TEXT NOT NULL;

-- ALTERAR A DATA DA RESPOSTA CONFORME A RESPOSTA ALTERADA 
ALTER TABLE Mensagem
	ALTER COLUMN DtReposta DATETIME;

ALTER TABLE Mensagem 
	ALTER COLUMN Status_Mensagem TEXT NOT NULL;
--

-- ALTERAR A ATIVIDADE VINCULADA

ALTER TABLE AtividadeVinculada 
	ALTER COLUMN Status_atividade TEXT NOT NULL;

-- ALTERAR ENTREGE 

ALTER TABLE Entregue 
	ALTER COLUMN  StatusEntrege TEXT NOT NULL;

-- ALTERAR SOLICITACAO 

ALTER TABLE SolicitacaoMatricula
	ALTER COLUMN solicita_status TEXT NOT NULL;

--ALTERAR ATIVIDADE TIPO

ALTER TABLE Atividade
	ALTER COLUMN TIPO TEXT NOT NULL;

-- ALTERAR Disciplina

ALTER TABLE Disciplina
	ALTER  COLUMN status_disciplina  TEXT NOT NULL;

ALTER TABLE Disciplina
	ALTER  COLUMN cargahoraria  TEXT NOT NULL;
	
ALTER TABLE Disciplina 
	ALTER COLUMN percentualPratico TEXT NOT NULL;

ALTER TABLE Disciplina

	ALTER COLUMN percentualTeorico TEXT NOT NULL;
---